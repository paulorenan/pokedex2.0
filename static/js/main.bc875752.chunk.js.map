{"version":3,"sources":["services/pokeapi.js","styles/pokebola.gif","components/Loading.jsx","components/PokemonCard.jsx","components/Header.jsx","pages/Home.jsx","components/Ability.jsx","components/Moves.jsx","pages/PokeInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["getPoke","url","a","fetch","response","json","data","getPokeNome","results","map","pokemon","name","getPokeUrl","nome","Loading","src","pokebola","alt","PokemonCard","props","useState","setPokemon","loading","setLoading","poke","capitalize","string","console","log","palavra","charAt","toUpperCase","slice","join","useEffect","fetchData","to","id","className","sprites","front_default","split","types","type","Header","Home","pokemonsName","setPokemonsName","pokemons","setPokemons","next","setNext","nameInput","setNameInput","loadPokemonsName","loadPokemons","pegarPokemons","handleSearch","e","preventDefault","history","push","onSubmit","placeholder","list","onChange","target","value","onClick","Ability","abilities","ability","pokeAbility","setAbility","effect_entries","filter","item","language","short_effect","Moves","moves","movesList","setMovesList","click","setClick","move","damage_class","power","accuracy","PokeInfo","match","params","min","max","stats","base_stat","back_default","back_female","front_female","front_shiny","back_shiny","back_shiny_female","front_shiny_female","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc875752.chunk.js","sourcesContent":["const pokeNomeUrl = 'https://pokeapi.co/api/v2/pokemon?limit=898'\n\nexport const getPoke = async (url) => {\n  const response = await fetch(url)\n  const data = await response.json()\n  return data\n}\n\nexport const getPokeNome = async () => {\n  const response = await fetch(pokeNomeUrl)\n  const data = await response.json()\n  return data.results.map(pokemon => pokemon.name)\n}\n\nexport const getPokeUrl = async (nome) => {\n  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${nome}`)\n  const data = await response.json()\n  return data\n}","export default __webpack_public_path__ + \"static/media/pokebola.544d44c8.gif\";","import React from 'react'\nimport pokebola from '../styles/pokebola.gif'\n\nfunction Loading() {\n  return (\n    <img src={pokebola} alt=\"loading\" />\n  )\n}\n\nexport default Loading\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getPoke } from '../services/pokeapi'\nimport Loading from './Loading'\nimport '../styles/PokeCard.css'\n\nfunction PokemonCard(props) {\n  const [pokemon, setPokemon] = useState({})\n  const [loading, setLoading] = useState(true)\n  const { poke } = props\n\n  useEffect(() => {\n    setLoading(true)\n    async function fetchData() {\n      const response = await getPoke(poke['url'])\n      setPokemon(response)\n      setLoading(false)\n    }\n    fetchData()\n  }, [poke]);\n\n  function capitalize(string) {\n    console.log(string);\n    const maiuscula = string.map((palavra)  => (\n      palavra.charAt(0).toUpperCase() + palavra.slice(1)\n      ))\n    return maiuscula.join(' ')\n  }\n\n  const renderPokemon = () => {\n    console.log(pokemon);\n    return (\n      <Link to={`/pokemon/${pokemon.id}`} className=\"cardContainer\">\n        <div className=\"imageCard\">\n          <img src={pokemon.sprites.front_default} alt=\"pokemon\" />\n        </div>\n        <div className=\"infoCard\">\n        <p>{capitalize(pokemon.name.split('-'))}</p>\n        <p>{`nº ${pokemon.id}`}</p>\n        </div>\n        <div className=\"typeCard\">\n          {pokemon.types.map((type) => (\n            <div key={type.type.name} className={`${type.type.name} tipo`}>\n              <p>{capitalize(type.type.name.split(\"-\"))}</p>\n            </div>\n          ))}\n        </div>\n      </Link>\n    )\n  }\n\n\n  return (\n    <div>\n    {loading ? <Loading /> : renderPokemon()}\n    </div>\n  )\n}\n\nexport default PokemonCard;\n","import React from 'react'\nimport '../styles/Header.css'\n\nfunction Header() {\n  return (\n    <header id='header'>\n      <h1 id='title'>Pokedex 2.0</h1>\n      <p id='subtitle'>Criado por: Paulo Renan Almeida</p>\n      <div id='ball'></div>\n    </header>\n  )\n}\n\nexport default Header;\n","import React, {useState, useEffect} from 'react'\nimport { getPokeNome, getPoke } from '../services/pokeapi'\nimport PokemonCard from '../components/PokemonCard'\nimport { Link } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Loading from '../components/Loading'\nimport '../styles/Home.css'\n\nfunction Home(props) {\n  const [pokemonsName, setPokemonsName] = useState([])\n  const [pokemons, setPokemons] = useState([])\n  const [next, setNext] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [nameInput, setNameInput] = useState('')\n\n  useEffect(() => {\n    async function loadPokemonsName() {\n      const response = await getPokeNome()\n      setPokemonsName(response)\n    }\n    loadPokemonsName()\n  }, [])\n\n  useEffect(() => {\n    async function loadPokemons() {\n      setLoading(true)\n      const response = await getPoke('https://pokeapi.co/api/v2/pokemon?limit=50&offset=0')\n      setPokemons(response.results)\n      setNext(response.next)\n      setLoading(false)\n    }\n    loadPokemons()\n  }, [])\n\n  const pegarPokemons = async () => {\n    const response = await getPoke(next)\n    setPokemons([...pokemons, ...response.results])\n    setNext(response.next)\n  }\n\n  const handleSearch = async (e) => {\n    e.preventDefault()\n    const {history} = props\n    history.push(`/pokemon/${nameInput}`)\n  }\n\n  return (\n    <div className=\"home\">\n      <Header />\n      <form className=\"pokeBusca\" onSubmit={handleSearch}>\n        <input type=\"text\" placeholder=\"Digite o nome do pokemon\" list=\"pokeName\" onChange={ (e) => setNameInput(e.target.value)} />\n        <Link to={`/pokemon/${nameInput}`}><button className=\"searchButton\">Pesquisar</button></Link>\n      <datalist id=\"pokeName\">\n        {pokemonsName.map(pokemon => (\n          <option key={pokemon} value={pokemon} />\n        ))}\n      </datalist>\n      </form>\n      <div className=\"pokeCard\">\n        {loading ? <Loading /> : pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.name} poke={pokemon} />\n        ))}\n      </div>\n      <div className=\"proxButton\">\n        <button onClick={pegarPokemons}>Carregar mais</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, {useState, useEffect} from 'react'\nimport { getPoke } from '../services/pokeapi.js'\nimport Loading from './Loading.jsx'\n\nfunction Ability(props) {\n  const { ability } = props.ability\n  const [pokeAbility, setAbility] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    async function fetchData() {\n      const pokemon = await getPoke(ability.url)\n      setAbility(pokemon)\n      setLoading(false)\n    }\n    fetchData()\n  }, [ability.url])\n\n  function capitalize(string) {\n    const maiuscula = string.map((palavra)  => (\n      palavra.charAt(0).toUpperCase() + palavra.slice(1)\n      ))\n    return maiuscula.join(' ')\n  }\n\n  function filtrarAbilities(abilities) {\n    const array = abilities.effect_entries\n    const arrayFiltrado = array.filter((item) => item.language.name === 'en')\n    return arrayFiltrado[0].short_effect\n  }\n\n  return (\n    <div>\n      {loading ? <Loading /> : \n      <details>\n        <summary>{capitalize(ability.name.split('-'))}</summary>\n        <p>{filtrarAbilities(pokeAbility)}</p>\n      </details>}\n    </div>\n  )\n}\n\nexport default Ability\n","import React, { useEffect, useState} from 'react'\nimport { getPoke } from '../services/pokeapi.js'\nimport Loading from './Loading.jsx'\n\nfunction Moves(props) {\n  const { moves } = props\n  const [movesList, setMovesList] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [click, setClick] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    async function fetchData() {\n      const pokemon = await getPoke(moves.move.url)\n      setMovesList(pokemon)\n      setLoading(false)\n    }\n    fetchData()\n  }, [moves.move.url])\n\n  function capitalize(string) {\n    const maiuscula = string.map((palavra)  => (\n      palavra.charAt(0).toUpperCase() + palavra.slice(1)\n      ))\n    return maiuscula.join(' ')\n  }\n\n  return (\n    <div>\n      {loading ? <Loading /> :\n      <details className=\"cont4\">\n        <summary onClick={ () => setClick(!click)} className={click ? 'caso1' : 'caso2'}>{capitalize(moves.move.name.split('-'))}</summary>\n        <div className=\"cont5\">\n          <p>{movesList.effect_entries[0].short_effect}</p>\n          <span className={`${movesList.type.name} tipo`}>{capitalize(movesList.type.name.split('-'))}</span>\n          <p>{`Tipo: ${capitalize(movesList.damage_class.name.split('-'))}`}</p>\n          <p>{`Power: ${(movesList.power === null ? '--' : movesList.power)}`}</p>\n          <p>{`Accuracy: ${(movesList.accuracy === null ? '--' : movesList.accuracy)}`}</p>\n        </div>\n      </details>\n        }\n    </div>\n  )\n}\n\nexport default Moves\n","import React, {useState, useEffect} from 'react'\nimport {getPokeUrl, getPokeNome} from '../services/pokeapi'\nimport { Link } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Ability from '../components/Ability'\nimport Moves from '../components/Moves'\nimport '../styles/PokeInfo.css'\n\nfunction PokeInfo(props) {\n  const [pokemon, setPokemon] = useState({})\n  const [loading, setLoading] = useState(true)\n  const [pokemonsName, setPokemonsName] = useState([])\n  const [nameInput, setNameInput] = useState('')\n  const [click, setClick] = useState(true)\n  const { match: { params: { id } } } = props\n\n  useEffect(() => {\n    async function fetchData() {\n      const pokemon = await getPokeUrl(id)\n      setPokemon(pokemon)\n      setLoading(false)\n    }\n    fetchData()\n  }, [id])\n\n  useEffect(() => {\n    async function fetchData() {\n      const pokemonsName = await getPokeNome()\n      setPokemonsName(pokemonsName)\n    }\n    fetchData()\n  }, [])\n\n  function capitalize(string) {\n    const maiuscula = string.map((palavra)  => (\n      palavra.charAt(0).toUpperCase() + palavra.slice(1)\n      ))\n    return maiuscula.join(' ')\n  }\n\n  const handleSearch = async (e) => {\n    e.preventDefault()\n    const {history} = props\n    history.push(`/pokemon/${nameInput}`)\n  }\n\n  const renderPokemon = () => {\n    return (\n      <div>\n        <form className=\"pokeBusca\" onSubmit={handleSearch}>\n          {pokemon.id !== 1 && <Link to={`/pokemon/${pokemon.id - 1}`}> <button className=\"but1\"><span>Anterior</span></button></Link>}\n          <input type=\"text\" placeholder=\"Digite o nome do pokemon\" list=\"pokeName\" onChange={ (e) => setNameInput(e.target.value)} />\n          <Link to={`/pokemon/${nameInput}`}><button className=\"searchButton\">Pesquisar</button></Link>\n          {pokemon.id !== 898 && <Link to={`/pokemon/${pokemon.id + 1}`}><button className=\"but2\"><span>Próximo</span></button></Link>}\n        <datalist id=\"pokeName\">\n          {pokemonsName.map(pokemon => (\n            <option key={pokemon} value={pokemon} />\n          ))}\n        </datalist>\n        </form>\n        <div className=\"pokemon-info\">\n          <div className=\"pokeName\">\n            <h1>{`Pokemon nº: ${pokemon.id}`}</h1>\n            <h2>{capitalize(pokemon.name.split('-'))}</h2>\n          </div>\n          <div>\n            <img src={pokemon.sprites.front_default} alt={pokemon.name} className=\"pokImg\"/>\n          </div>\n          <div>\n            {pokemon.types.map(type => (\n              <span key={type.type.name} className={`${type.type.name} tipo`}>{capitalize(type.type.name.split('-'))}</span>\n            ))}\n          </div>\n          <div className=\"statsAbility\">\n            <div className=\"ability\">\n              <h3>Habilidades</h3>\n              {pokemon.abilities.map(ability => (\n                <Ability key={ability.ability.name} ability={ability} />\n              ))}\n            </div>\n            <div className=\"stats\">\n              <h3>Stats</h3>\n              <div className=\"statsDiv\">\n                <div className=\"points\">\n                <label>HP</label>\n                <meter min=\"0\" max=\"255\" value={pokemon.stats[0].base_stat}></meter>\n                </div>\n                <div className=\"points\">\n                  <label>Attack</label>\n                  <meter min=\"0\" max=\"190\" value={pokemon.stats[1].base_stat}></meter>\n                </div>\n                <div className=\"points\">\n                  <label>Defense</label>\n                  <meter min=\"0\" max=\"230\" value={pokemon.stats[2].base_stat}></meter>\n                </div>\n                <div className=\"points\">\n                  <label>Special Attack</label>\n                  <meter min=\"0\" max=\"194\" value={pokemon.stats[3].base_stat}></meter>\n                </div>\n                <div className=\"points\">\n                  <label>Special Defense</label>\n                  <meter min=\"0\" max=\"230\" value={pokemon.stats[4].base_stat}></meter>\n                </div>\n                <div className=\"points\">\n                  <label>Speed</label>\n                  <meter min=\"0\" max=\"180\" value={pokemon.stats[5].base_stat}></meter>\n                </div>\n              </div>\n            </div>\n          </div>\n          <details className=\"moveCont\">\n            <summary className=\"cont1\" onClick={ () => setClick(!click) }><h3>{click ? '► Ataques' : '▼ Ataques'}</h3></summary>\n            <div className=\"cont2\">\n              {pokemon.moves.map(moves => (\n                <Moves key={moves.move.name} moves={moves} />\n              ))}\n            </div>\n          </details>\n          <div className=\"imgCont\">\n            <h3>Sprites</h3>\n            <div className=\"img1\">\n              <div className=\"img2\">\n                <div className=\"nomePok\">\n                  <p className=\"lado\">Frente</p>\n                </div>\n                <div>\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n                </div>\n              </div>\n              <div className=\"img2\">\n                <div className=\"nomePok\">\n                  <p className=\"lado\">Costas</p>\n                </div>\n                <div>\n                <img src={pokemon.sprites.back_default} alt={pokemon.name} />\n                </div>\n              </div>\n            </div>\n            {pokemon.sprites.back_female != null && \n              <div className=\"img1\">\n                <div className=\"img2\">\n                  <div className=\"nomePok\">\n                    <p className=\"lado\">{'Frente (Fêmea)'}</p>\n                  </div>\n                  <div>\n                    <img src={pokemon.sprites.front_female} alt={pokemon.name} />\n                  </div>\n                </div>\n                <div className=\"img2\">\n                  <div className=\"nomePok\">\n                    <p className=\"lado\">{\"Costas (Fêmea)\"}</p>\n                  </div>\n                  <div>\n                    <img src={pokemon.sprites.back_female} alt={pokemon.name} />\n                  </div>\n                </div>\n            </div> }\n            <div className=\"img1\">\n              <div className=\"img2\">\n                <div className=\"nomePok\">\n                  <p className=\"lado\">{\"Frente (Shiny)\"}</p>\n                </div>\n                <div>\n                <img src={pokemon.sprites.front_shiny} alt={pokemon.name} />\n                </div>\n              </div>\n              <div className=\"img2\">\n                <div className=\"nomePok\">\n                  <p className=\"lado\">{\"Costas (Shiny)\"}</p>\n                </div>\n                <div>\n                <img src={pokemon.sprites.back_shiny} alt={pokemon.name} />\n                </div>\n              </div>\n            </div>\n            {pokemon.sprites.back_shiny_female != null && \n              <div className=\"img1\">\n                <div className=\"img2\">\n                  <div className=\"nomePok\">\n                    <p className=\"lado\">{'Frente (Fêmea Shiny)'}</p>\n                  </div>\n                  <div>\n                    <img src={pokemon.sprites.front_shiny_female} alt={pokemon.name} />\n                  </div>\n                </div>\n                <div className=\"img2\">\n                  <div className=\"nomePok\">\n                    <p className=\"lado\">{\"Costas (Fêmea Shiny)\"}</p>\n                  </div>\n                  <div>\n                    <img src={pokemon.sprites.back_shiny_female} alt={pokemon.name} />\n                  </div>\n                </div>\n            </div> }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header />\n      {loading ? <p>Loading...</p> : renderPokemon()}\n      <div className=\"buttonCont\">\n          <Link to={'/'} className=\"proxButton\"><button>Voltar ao inicio</button></Link>\n        </div>\n    </div>\n  )\n}\n\nexport default PokeInfo\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport PokeInfo from './pages/PokeInfo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/pokemon/:id\" component={PokeInfo} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}